title: Unicode compatibility characters
id: 10966086
In Unicode and the UCS a compatibility character is a character that is encoded solely to maintain round trip convertibility with other often older standards As the Unicode Glossary says A character that would not have been encoded except for compatibility and round trip convertibility with other standards Although compatibility is used in names it is not marked as a property However the definition is more complicated than the glossary reveals One of the properties given to characters by the Unicode consortium is the characters decomposition or compatibility decomposition Over five thousand characters do have a compatibility decomposition mapping that compatibility character to one or more other UCS characters By setting a character s decomposition property Unicode establishes that character as a compatibility character The reasons for these compatibility designations are varied and are discussed in further detail below The term decomposition sometimes confuses because a character s decomposition can in some cases be a singleton In these cases the decomposition of one character is simply another approximately but not canonically equivalent character Compatibility character types and keywords The compatibility decomposition property for the Unicode compatibility characters includes a keyword that divides the compatibility characters into logical groups Those characters with a compatibility decomposition but without a keyword are termed canonical decomposable characters and those characters are not compatibility characters Keywords for compatibility decomposable characters include initial medial final isolated wide narrow small square vertical circle noBreak fraction sub super and compat These keywords provide some indication of the relation between the compatibility character and its compatibility decomposition character sequence Compatibility characters fall in three basic categories Characters corresponding to multiple alternate glyph forms and precomposed diacritics to support software and font implementations that do not include complete Unicode text layout capabilities Characters included from other character sets or otherwise added to the UCS that constitute rich text rather than the plain text goals of Unicode Some other characters that are semantically distinct but visually similar Because these semantically distinct characters may be displayed with glyphs similar to the glyphs of other characters text processing software should try to address possible confusion for the sake of end users When comparing and collating sorting text strings different forms and rich text variants of characters should not alter the text processing results For example software users may be confused when performing a find on a page for a capital Latin letter I and their software application fails to find the visually similar Roman numeral Compatibility mappings types Glyph substitution and composition Some compatibility characters are completely dispensable for text processing and display software that conforms to the Unicode standard These include Ligatures Ligatures such as ffi in the Latin script were often encoded as a separate character in legacy character sets Unicode s approach to ligatures is to treat them as rich text and if turned on handle them through glyph substitution Precomposed Roman numerals For example Roman numeral twelve U B can be decomposed into a Roman numeral ten U and two Roman numeral ones U Precomposed characters are in the Number Forms block Precomposed fractions These decomposition have the keyword fraction A fully conforming text handler should display the vulgar fraction U BC identically to the composed fraction numeral with fraction slash U and numeral Precomposed characters are in the Number Forms block Contextual glyphs or forms These arise primarily in the Arabic script Using fonts with glyph substitution capabilities such as OpenType and TrueTypeGX Unicode conforming software can substitute the proper glyphs for the same character depending on whether that character appears at the beginning end middle of a word or in isolation Such glyph substitution is also necessary for vertical top to bottom text layout for some East Asian languages In this case glyphs must be substituted or synthesized for wide narrow small and square glyph forms Non conforming software or software using other character sets instead use multiple separate character for the same letter depending on its position further complicating text processing The UCS Unicode character properties and the Unicode algorithms provide software implementations with everything needed to properly display these characters from their decomposition equivalents Therefore these decomposable compatibility characters become redundant and unnecessary Their existence in the character set requires extra text processing to ensure text is properly compared and collated see Unicode normalization Moreover these compatibility characters provide no additional or distinct semantics Nor do these characters provide any visually distinct rendering provided the text layout and fonts are Unicode conforming Also none of these characters are required for round trip convertibility to other character sets since the transliteration can easily map decomposed characters to precomposed counterparts in another character set Similarly contextual forms such as a final Arabic letter can be mapped based on its position within a word to the appropriate legacy character set form character In order to dispense with these compatibility characters text software must conform to several Unicode protocols The software must be able to Compose diacritic marked graphemes from letter characters and one or more separate combining diacritic marks Substitute at the author or reader s discretion ligatures and contextual glyph variants Lay out CJKV text vertically at the author s or reader s discretion substituting glyphs for small vertical narrow wide square forms either from font data or synthesized as needed Combine fractions using the Fraction Slash character U and any other arbitrary characters Combine a Combining Long Solidus Overlay U with other symbols for example or for U All together these compatibility characters included for incomplete Unicode implementations total of the designated compatibility characters These include all of the compatibility characters marked with the keywords initial medial final isolated fraction wide narrow small vertical square Also it includes nearly all of the canonical and most of the compat keyword compatibility characters the exceptions include those compat keyword characters for enclosed alphanumerics enclosed ideographs and those discussed in Semantically distinct characters Rich text compatibility characters Many other compatibility characters constitute what Unicode considers rich text and therefore outside the goals of Unicode and UCS In some sense even compatibility characters discussed in the previous section those that aid legacy software in displaying ligatures and vertical text constitute a form of rich text since the rich text protocols determine whether text is displayed in one way or another However the choice to display text with or without ligatures or vertically versus horizontally are both non semantic rich text They are simply style differences This is in contrast to other rich text such as italics superscripts and subscripts or list markers where the styling of the rich text implies certain semantics along with it For comparing collating handling and storing plain text rich text variants are semantically redundant For example using a superscript character for the numeral is likely indistinguishable from using the standard character for a numeral and then using rich text protocols to make it superscript Such alternate rich text characters therefore create ambiguity because they appear visually the same as their plain text counterpart characters with rich text formatting applied These rich text compatibility characters include Mathematical Alphanumeric Symbols These symbols are simply clones of the Latin and Greek alphabets and Indic Arabic decimal digits repeated in various typefaces They are intended as an arbitrary palette for mathematical notation However they tend to undermine the distinction between encoding characters versus encoding visual glyphs as well as Unicode s goals of supporting only plain text characters Such alternate styling for a mathematical symbol palette could be easily created through rich text protocols instead Enclosed Alphanumerics and ideographs markers These are characters included primarily for list markers They do not constitute plain text characters Moreover the use of other rich text protocols is more appropriate since the set of enclosed alphanumerics or ideographs provisioned in the UCS is limited Circled alphanumerics and ideographs The circled forms are also likely for use as markers Again using characters along with rich text protocols to encircle characters strings is more flexible Spaces and no break spaces of varying widths These characters are simply rich text variants of the core space U and No break Space U A Other rich text protocols should be used instead such as tracking kerning or word spacing attributes Some subscript and superscript form characters Many of the subscript and superscript characters are actually semantically distinct characters from the International Phonetic Alphabet and other writing systems and do not really fall in the category of rich text However others simply constitute rich text presentation forms of other Greek Latin and numeral characters These rich text superscript and subscript characters therefore properly belong to this category of rich text compatibility characters Most of these are in the Superscripts and Subscripts or the Basic Latin blocks For all of these rich text compatibility characters the display of glyphs is typically distinct from their compatibility decomposition related characters However these are considered compatibility characters and discouraged for use by the Unicode consortium because they are not plain text characters which is what Unicode seeks to support with its UCS and associated protocols Rich text should be handled through non Unicode protocols such as HTML CSS RTF and other such protocols The rich text compatibility characters comprise of the compatibility characters These include all of the compatibility characters marked with keywords circle and font except three listed in the semantically distinct below spaces variants from the compat and canonical characters and some of the keyword superscript and subscript from the Superscripts and Subscripts block Semantically distinct characters Many compatibility characters are semantically distinct characters though they may share representational glyphs with other characters Some of these characters may have been included because most other characters sets that focused on one script or writing system So for example the ISO and other Latin character sets likely included a character for pi since when focusing on primarily one writing system or script those character sets would not have otherwise had characters for the common mathematical symbol However with Unicode mathematicians are free to use characters from any known script in the World to stand in for a mathematical set or mathematical constant To date Unicode has only added specific semantic support for a few such mathematical constants for example the Planck constant U E and Euler constant U both of which Unicode considers to be compatibility characters Therefore Unicode designates several mathematical symbols based on letters from Greek and Hebrew as compatibility characters These include Hebrew letter based symbols alef U bet U gimel U and dalet U Greek letter based symbols beta U D theta U D phi U D pi U D kappa U F rho U F capital theta U F While these compatibility characters are distinguished from their compatibility decomposition characters only by adding the word symbol to their name they do represent long standing distinct meanings in written mathematics However for all practical purposes they share the same semantics as their compatibility equivalent Greek or Hebrew letter These may be considered border line semantically distinguishable characters so they are not included in the total Though not the intention of Unicode to encode such measuring units the repertoire includes six such symbols that should not be used by authors the characters decompositions should be used instead Unit symbols Angstrom U B use U C instead Ohm U use U A instead Kelvin K U A use U B instead Fahrenheit U use U B and U instead Celsius U use U B and U instead Micro Sign U B use U BC instead Unicode also designates other letter like symbols as compatibility characters Other Greek letter based symbols lunate epsilon U F lunate sigma U F capital lunate sigma U F upsilon with hook U D Mathematical constants Euler constant U Planck constant U E reduced Planck constant U F Currency symbols rupee sign U A rial sign U FDFC Punctuation one dot leader U no break space U A non breaking hyphen U Tibetan mark delimiter tsheg bstar U F C Other letter like symbols information source U account of U addressed to the subject U care of U cada una U numero U telephone sign U facsimile sign U B trademark U service mark U In addition several scripts use glyph position such as superscripts and subscripts to differentiate semantics In these cases subscripts and superscripts are not merely rich text but constitute a distinct character in the writing system total characters representing abstract phonemes from phonetic alphabets such as the International Phonetic Alphabet use such positional glyphs to represent semantic differences U D C U D A U D U D B U DBF U B U B U E U E characters from the Kanbun block U U F character from the Tifinagh script Tifinagh Modifier Letter Labialization Mark U D F character from the Georgian script Modifier Letter Georgian Nar U FC masculine U BA and feminine U AA ordinal indicators included in the Latin supplement block Finally Unicode designates Roman numerals as compatibility equivalence to the Latin letters that share the same glyphs Capital Roman Numerals One U Five U Ten U Fifty U C One Hundred U D Five Hundred U E One Thousand U F and lower case variants One U Five U Ten U Fifty U C One Hundred U D Five Hundred U E and One Thousand U F precomposed Roman numerals in uppercase and lowercase variants and Roman numeral One Thousand actually has a third character representing a third form or glyph for the same semantic unit One Thousand C D U From this glyph one can see where the practice of using a Latin M may have arisen Strangely though Unicode unifies the sign value Roman numerals with the very different though visually similar Latin letters the Indic Arabic place value positional decimal digit numerals are repeated times a total of code points for numerals throughout the UCS without any relational or decomposition mapping between them The presence of these semantically distinct though visually similar characters plus the borderline Hebrew and Greek letter based symbols and the measurement unit symbols among the decomposable characters complicates the topic of compatibility characters The Unicode standard discourages the use of compatibility characters by content authors However in certain specialized areas these characters are important and quite similar to other characters that have not been included among the compatibility characters For example in certain academic circles the use of Roman numerals as distinct from Latin letters that share the same glyphs would be no different from the use of Cuneiform numerals or ancient Greek numerals Collapsing the Roman numeral characters to Latin letter characters eliminates a semantic distinction A similar situation exists for phonetic alphabet characters that use subscript or superscript positioned glyphs In the specialized circles that use phonetic alphabets authors should be able to do so without resorting to rich text protocols As another example the keyword circle compatibility characters are often used for describing the game Go However these uses of the compatibility characters constitute exceptions where the author has a special reason to use the otherwise discouraged characters Compatibility blocks Several blocks of Unicode characters include either entirely or almost entirely all compatibility characters U F U FFEF except for the nonchars The compatibility blocks contain none of the semantically distinct compatibility characters with only one exception the rial currency symbol U FDFC so the compatibility decomposable characters in the compatibility blocks fall unambiguously into the set of discouraged characters Unicode recommends authors use the plain text compatibility decomposition equivalents instead and complement those characters with rich text markup This approach is much more flexible and open ended than using the finite set of circled or enclosed alphanumerics to give just one example There are a small number of characters even within the compatibility blocks that themselves are not compatibility characters and therefore may confuse authors The Enclosed CJK Letters and Months block contains a single non compatibility character the Korean Standard Symbol U F That symbol and other characters have been included in the blocks for unknown reasons The CJK Compatibility Ideographs block contains these non compatibility unified Han ideographs U FA E U FA F U FA U FA U FA U FA F U FA U FA U FA U FA U FA U FA These thirteen characters are not compatibility characters and their use is not discouraged in any way However U EAF the same as U FA is mistakenly encoded in CJK Unified Ideographs Extension B In any event a normalized text should never contain both U EAF and U FA these code points represent the same character encoded twice Several other characters in these blocks have no compatibility mapping but are clearly intended for legacy support Alphabetic Presentation Forms Hebrew Point Judeo Spanish Varika U FB E This is a glyph variant of Hebrew Point Rafe U BF though Unicode provides no compatibility mapping Arabic Presentation Forms Ornate Left Parenthesis U FD E A glyph variant for U Ornate Right Parenthesis U FD F A glyph variant for U Ligature Bismillah Ar Rahman Ar Raheem U FDFD Bismillah Ar Rahman Ar Raheem is a ligature for Beh U Seen U Meem U Space U Alef U Lam U Lam U Heh U Space U Alef U Lam U Reh U Hah U D Meem U Alef U Noon U Space U Alef U Lam U Reh U Hah U D Yeh U A Meem U i e Similarly U FDFA and U FDFB code for two other Arabic ligatures of and characters respectively Arabic Tail Fragment U FE for supporting text systems without contextual glyph handling CJK Compatibility Forms that are both related to CJK Unified Ideograph U E Sesame Dot U FE White Sesame Dot U FE Enclosed Alphanumerics rich text variants Negative Circled Numbers and through U FF and U EB through U F Double Circled Numbers through U F through U FE Normalization Normalization is the process by which Unicode conforming software first performs full compatibility decomposition or composition before making comparisons or collating text strings See also CJK Compatibility CJK Compatibility Forms CJK Compatibility Ideographs References External links Normalization Chinese Text Project Unicode normalization issues in classical Chinese with list of normalized CJK codepoints